<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>《墨-状态栏歌词》6.x常见问题（一）</title>
    <url>/posts/36306/</url>
    <content><![CDATA[<div class="note success no-icon flat"><p><a href="https://github.com/Block-Network/StatusBarLyric/releases">《墨-状态栏歌词》稳定版下载地址</a><br>
<a href="https://github.com/Block-Network/StatusBarLyric/actions/workflows/Android_Dev.yml">《墨-状态栏歌词》Dev下载地址</a></p>
</div>
<div class="note primary no-icon flat"><p><a href="https://github.com/xiaowine/Lyric-Getter/releases">《Lyric Getter》稳定版下载地址</a><br>
<a href="https://github.com/xiaowine/Lyric-Getter/actions/workflows/android.yml">《Lyric Getter》Dev下载地址</a></p>
</div>
<hr>
<div class="note default modern"><p><a href="/posts/8e64/">《墨-状态栏歌词》6.x基础配置教程</a></p>
</div>
<hr>
<h3 id="常见问题"><a class="headerlink" href="#常见问题"></a>常见问题</h3>
<h4 id="不会用，好麻烦"><a class="headerlink" href="#不会用，好麻烦"></a>不会用，好麻烦</h4>
<ul>
<li><a href="/posts/8e64/">点此前往《墨-状态栏歌词》6.x基础配置教程</a></li>
</ul>
<h4 id="音乐软件暂停后，或者划掉后台，歌词不隐藏"><a class="headerlink" href="#音乐软件暂停后，或者划掉后台，歌词不隐藏"></a>音乐软件暂停后，或者划掉后台，歌词不隐藏</h4>
<ul>
<li>因为模块<code>Lyric Getter</code>通过监听媒体通知事件，来判断是否应该隐藏歌词。而部分音乐软件默认通知样式为自定义的，所以需要将通知样式改为系统样式</li>
</ul>
<h4 id="为什么开启了隐藏时间-通知图标-运营商，但是还是会显示"><a class="headerlink" href="#为什么开启了隐藏时间-通知图标-运营商，但是还是会显示"></a>为什么开启了隐藏时间/通知图标/运营商，但是还是会显示</h4>
<ul>
<li>开启<code>扩展页</code>中的<code>限制可见性变化</code>，重启系统界面</li>
</ul>
<h4 id="为什么限制可见性变化不默认开启"><a class="headerlink" href="#为什么限制可见性变化不默认开启"></a>为什么<code>限制可见性变化</code>不默认开启</h4>
<ul>
<li>因为需要判断View是否为目标View，会有一定的性能损耗，所以默认不开启</li>
</ul>
<h4 id="为什么有的时候用不了，需要重启系统界面"><a class="headerlink" href="#为什么有的时候用不了，需要重启系统界面"></a>为什么有的时候用不了，需要重启系统界面</h4>
<ul>
<li><s>大概率是因为你切换在浅色/深色模式中切换了，由于部分系统玄学，导致功能失效，目前无法修复（已知MIUI和LG有这问题）</s></li>
<li>6.1.0已修复此问题</li>
</ul>
<h4 id="为什么歌词有的时候不跟随变化颜色，导致看不清（与系统图标颜色不一）"><a class="headerlink" href="#为什么歌词有的时候不跟随变化颜色，导致看不清（与系统图标颜色不一）"></a>为什么歌词有的时候不跟随变化颜色，导致看不清（与系统图标颜色不一）</h4>
<ul>
<li>我不知道</li>
<li>但是我知道，你可以在<code>扩展页</code>中开启切换<code>歌词反色方案</code>，重启系统界面</li>
</ul>
<h4 id="为什么开机后，或者突然出现了一句不知道是啥的歌词"><a class="headerlink" href="#为什么开机后，或者突然出现了一句不知道是啥的歌词"></a>为什么开机后，或者突然出现了一句不知道是啥的歌词</h4>
<ul>
<li>大概率你是MIUI，且有小米音乐，那么就是他抽风</li>
<li><s>你可以在<code>扩展页</code>中通过<code>正则表达屏蔽</code>来屏蔽它</s></li>
<li>已经在Lyric Getter中加入屏蔽</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>墨-状态栏歌词</tag>
        <tag>Android</tag>
        <tag>Xposed模块</tag>
      </tags>
  </entry>
  <entry>
    <title>《墨-状态栏歌词》6.x基础配置教程</title>
    <url>/posts/8e64/</url>
    <content><![CDATA[<div class="note success no-icon flat"><p><a href="https://github.com/Block-Network/StatusBarLyric/releases">《墨-状态栏歌词》稳定版下载地址</a><br>
<a href="https://github.com/Block-Network/StatusBarLyric/actions/workflows/Android_Dev.yml">《墨-状态栏歌词》Dev下载地址</a></p>
</div>
<hr>
<h3 id="前言"><a class="headerlink" href="#前言"></a>前言</h3>
<ul>
<li>《墨-状态栏歌词》6.x相较于之前的版本改动巨大，并且不是激活就可用，需要进行一个简单的配置，下面进行教程</li>
</ul>
<h4 id="基础配置教程"><a class="headerlink" href="#基础配置教程"></a>基础配置教程</h4>
<ul>
<li>安装<a href="https://github.com/Block-Network/StatusBarLyric/releases">LSPosed框架</a>，并激活本模块</li>
<li>在LSPosed框架中激活本模块，作用域选择<code>推荐应用</code>即可</li>
<li>进入本模块，打开主开关，进入Hook页</li>
<li><code>开启测试模式</code>，重启系统界面（需给本模块Root权限），重启点击获取Hook点</li>
<li>点击获取Hook点后，进入选择页，会出现一个列表</li>
<li>每个Hook点都点击尝试下，当状态栏出现<code>模块名字</code>则为可用的Hook点</li>
<li>选择后返回上页，<code>关闭测试模式</code>，再次重启系统界面</li>
<li>至此6.x基础配置教程已经结束</li>
</ul>
<h4 id="常见问题"><a class="headerlink" href="#常见问题"></a>常见问题</h4>
<h5 id="没有显示模块名字的Hook点？"><a class="headerlink" href="#没有显示模块名字的Hook点？"></a>没有显示模块名字的Hook点？</h5>
<ul>
<li>开启<code>放宽过滤</code>，重启系统界面，再次尝试</li>
<li><code>关闭修改状态栏的其他模块</code>，避免相互影响</li>
</ul>
<h5 id="为什么我选择了Hook点，但是状态栏没有显示歌词？"><a class="headerlink" href="#为什么我选择了Hook点，但是状态栏没有显示歌词？"></a>为什么我选择了Hook点，但是状态栏没有显示歌词？</h5>
<ul>
<li>检查是否开启了测试模式，如果开启了测试模式，请关闭测试模式，再次重启系统界面</li>
<li>请<code>关闭修改状态栏的其他模块</code>，避免相互影响</li>
</ul>
<h5 id="为什么显示广播接收超时？"><a class="headerlink" href="#为什么显示广播接收超时？"></a>为什么显示广播接收超时？</h5>
<ul>
<li>先重启系统界面，重启后再次点击获取Hook点。</li>
<li>依然无效请在LSPosed框架中，模块取消勾选系统界面再勾选，重启手机，再次尝试</li>
<li>若依旧无效，请<code>携带系统界面Apk</code>，<a href="https://github.com/Block-Network/StatusBarLyric/issues/new?assignees=&amp;labels=&amp;projects=&amp;template=bug_report.md&amp;title=%E5%B9%BF%E6%92%AD%E6%8E%A5%E6%94%B6%E8%B6%85%E6%97%B6">反馈问题</a></li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>墨-状态栏歌词</tag>
        <tag>Android</tag>
        <tag>Xposed模块</tag>
      </tags>
  </entry>
  <entry>
    <title>《墨-状态栏歌词》6.x更新简介</title>
    <url>/posts/ffb9/</url>
    <content><![CDATA[<div class="note success no-icon flat"><p><a href="https://github.com/Block-Network/StatusBarLyric/releases">《墨-状态栏歌词》稳定版下载地址</a></p>
</div>
<hr>
<h2 id="《墨-状态栏歌词》全部重构"><a class="headerlink" href="#《墨-状态栏歌词》全部重构"></a>《墨-状态栏歌词》全部重构</h2>
<p><img src="https://raw.githubusercontent.com/Block-Network/StatusBarLyric/Dev/icon.png" alt="Icon"></p>
<p>经过一段时间的重写，《墨-状态栏歌词》已经全部重构，现在的版本相比以前的版本，更加的省电，性能占用更加的少，系统通用性更高，几乎适配所有系统</p>
<h3 id="Hook点原理改变"><a class="headerlink" href="#Hook点原理改变"></a>Hook点原理改变</h3>
<ul>
<li><code>6.x之前</code>的版本所有Hook点都是固定的，也就是说，不同系统，不同Android版本可能都需要单独适配，特别是国内定制化系统</li>
<li><code>6.x之后</code>寻找所有TextView（也就是显示文字的控件），再判断它的文字是否为当前时间，如果是，则有可能为状态栏的时间控件，记录下来，之后让用户选择一个能正常显示的，因为机器已经判断不出来了</li>
<li>
<mark class="hl-label green">优点</mark> ：适配99.9%的系统，并且适配部分官改
</li>
<li>
<mark class="hl-label red">缺点</mark> ：部分系统会出现玄学问题，比如在浅色与深色模式切换后失效，导致无法显示，这个问题目前还没有解决方案
</li>
</ul>
<h3 id="性能提升"><a class="headerlink" href="#性能提升"></a>性能提升</h3>
<ul>
<li><code>6.x之前</code>的的版本有大部分循环进行判断的代码，这种方式每秒要执行几次到几十次，资源占用较大</li>
<li><code>6.x之后</code>所有方法改为触发式，系统执行对应方法时才会触发这部分代码，大大减少了资源占用</li>
</ul>
<h3 id="更加实用的功能功能"><a class="headerlink" href="#更加实用的功能功能"></a>更加实用的功能功能</h3>
<ul>
<li><code>6.x之后</code>
<ul>
<li>完善了 点击状态栏隐藏歌词</li>
<li>添加了 动态歌词速度（Beta）</li>
<li>More…</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>墨-状态栏歌词</tag>
        <tag>Android</tag>
        <tag>Xposed模块</tag>
      </tags>
  </entry>
  <entry>
    <title>Alist</title>
    <url>/posts/21716/</url>
    <content><![CDATA[<p>我自己搭建的一个网盘，对接了阿里云<br>
存了些视频 软件 系统 图片等杂七杂八的东西<br>
<a href="https://alist.xiaowine.cc/">点击进入</a></p>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>存储</tag>
        <tag>Alist</tag>
      </tags>
  </entry>
  <entry>
    <title>关闭MIUI USB安装软件提示</title>
    <url>/posts/12063/</url>
    <content><![CDATA[<h3 id="原因"><a class="headerlink" href="#原因"></a>原因</h3>
<p>MIUI不知从什么时候开始，每次使用ADB安装软件都会弹出一个提示框，让你选择是允许还是拒绝，<br>
这个提示框很烦人，每次都要点，对开发者来说很麻烦</p>
<h3 id="关闭步骤"><a class="headerlink" href="#关闭步骤"></a>关闭步骤</h3>
<ul>
<li>以MIUI14为例</li>
<li>打开设置</li>
<li>进入<code>开发者选项</code>(未开启的话，先打开开发者选项。此类教程网上很多，不再赘述)</li>
<li>划到最下面，找到<code>启用MIUI优化</code>，关闭它</li>
<li>返回到设置主页面</li>
<li>进入<code>应用管理</code></li>
<li>进入<code>授权管理</code>，会发现右上角有个图标</li>
<li>点击图标，关闭<code>USB安装管理</code>即可</li>
</ul>
<h3 id="注意"><a class="headerlink" href="#注意"></a>注意</h3>
<ul>
<li>开启<code>启用MIUI优化</code>，在<code>授权管理</code>就不会出现图标了，所以需要先关闭</li>
<li>关闭<code>启用MIUI优化</code>，系统会有一些变化，在关闭<code>USB安装管理</code>后可以重新启用</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>搞机</tag>
        <tag>MIUI</tag>
        <tag>破解</tag>
      </tags>
  </entry>
  <entry>
    <title>破解MIUI13之后深色模式只有部分软件能强制反色</title>
    <url>/posts/7017/</url>
    <content><![CDATA[<h3 id="历史原因"><a class="headerlink" href="#历史原因"></a>历史原因</h3>
<p>MIUI13开始，深色模式的强制反色改为了白名单模式<br>
白名单里的大多为热门大厂软件，小众软件以至于无法强制反色，晚上真的是亮瞎眼<br>
至于为什么改，看看小米社区环境就知道了</p>
<hr>
<h3 id="破解思路"><a class="headerlink" href="#破解思路"></a>破解思路</h3>
<p>既然有白名单，就要有地方存白名单的信息，我们可以从白名单文件下手，添加我们要强制反色的软件<br>
从深色这一词(<code>dark</code>)以及为线索，开始搜索文件名<br>
在 <code>/system/etc/</code>文件夹下发现了<code>ForceDarkAppSettings.json</code>文件，这就是MIUI13的白名单文件（MIUI14改到了<code>/system_ext/etc/forcedarkconfig/</code>文件夹下）</p>
<hr>
<h3 id="文件结构分析"><a class="headerlink" href="#文件结构分析"></a>文件结构分析</h3>
<p>我们先看看白名单文件部分内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;&quot;defaultEnable&quot;: true, &quot;overrideEnableValue&quot;: 0, &quot;packageName&quot;: &quot;com.sina.weibo&quot;, &quot;showInSettings&quot;: true&#125;,</span><br><span class="line">  &#123;&quot;defaultEnable&quot;: true, &quot;overrideEnableValue&quot;: 0, &quot;packageName&quot;: &quot;com.ss.android.article.news&quot;, &quot;showInSettings&quot;: true&#125;,</span><br><span class="line">  &#123;&quot;defaultEnable&quot;: true, &quot;overrideEnableValue&quot;: 0, &quot;packageName&quot;: &quot;com.snda.wifilocating&quot;, &quot;showInSettings&quot;: true&#125;,</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>白名单文件里是一个<code>Json</code>，由一个大的<code>List</code>包含着一个个<code>Map</code><br>
<code>List</code>没啥说的<br>
<code>Map</code>的数据我们拿第一个分析</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;defaultEnable&quot;: true, &quot;overrideEnableValue&quot;: 0, &quot;packageName&quot;: &quot;com.sina.weibo&quot;, &quot;showInSettings&quot;: true&#125;</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>名字</th>
<th>值说明</th>
<th>数据类型</th>
</tr>
</thead>
<tbody>
<tr>
<td>defaultEnable</td>
<td>是否启用</td>
<td>布尔值</td>
</tr>
<tr>
<td>overrideEnableValue</td>
<td>覆盖等级</td>
<td>整数</td>
</tr>
<tr>
<td>packageName</td>
<td>反色软件包名</td>
<td>字符串</td>
</tr>
<tr>
<td>showInSettings</td>
<td>是否在设置显示</td>
<td>布尔值</td>
</tr>
</tbody>
</table>
<p>那么如果我要添加一个软件在白名单里面，那么就添加一次<code>Map</code>在<code>List</code>里面</p>
<p>例如这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;&quot;defaultEnable&quot;: true, &quot;overrideEnableValue&quot;: 0, &quot;packageName&quot;: &quot;Com.bilibili.app.blue&quot;, &quot;showInSettings&quot;: true&#125;,</span><br><span class="line">  &#123;&quot;defaultEnable&quot;: true, &quot;overrideEnableValue&quot;: 0, &quot;packageName&quot;: &quot;tv.danmaku.bili&quot;, &quot;showInSettings&quot;: false&#125;,</span><br><span class="line">  &#123;&quot;defaultEnable&quot;: true, &quot;overrideEnableValue&quot;: 0, &quot;packageName&quot;: &quot;com.sina.weibo&quot;, &quot;showInSettings&quot;: true&#125;,</span><br><span class="line">  &#123;&quot;defaultEnable&quot;: true, &quot;overrideEnableValue&quot;: 0, &quot;packageName&quot;: &quot;com.ss.android.article.news&quot;, &quot;showInSettings&quot;: true&#125;,</span><br><span class="line">  &#123;&quot;defaultEnable&quot;: true, &quot;overrideEnableValue&quot;: 0, &quot;packageName&quot;: &quot;com.snda.wifilocating&quot;, &quot;showInSettings&quot;: true&#125;,</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>哔哩哔哩概念版 强制反色，并且在设置显示</li>
<li>哔哩哔哩 强制反色，但是并不在设置显示</li>
</ul>
<hr>
<h3 id="保存修改"><a class="headerlink" href="#保存修改"></a>保存修改</h3>
<p>目前据大部分新手机都是<code>EROFS</code>文件系统，旧手机是<code>EXT4</code>文件系统<br>
<code>EROFS</code>就算有ROOT权限都不能修改系统，<code>EXT4</code>有ROOT权限就能修改<br>
所以当你修改后保存，且给予了修改软件ROOT时，无法保存，那么你就是<code>EROFS</code>文件系统<br>
最简单的解决方法就是制作Magisk模块挂载修改过的文件，以达到修改目的白名单文件的目的</p>
<hr>
<h3 id="对比"><a class="headerlink" href="#对比"></a>对比</h3>
<table>
<thead>
<tr>
<th>修改前</th>
<th>修改后</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://i.postimg.cc/PxZYr4hj/Screenshot-2023-03-13-21-11-08-311-com-android-se.jpg" alt="Screenshot-2023-03-13-21-11-08-311-com-android-se.jpg"></td>
<td><img src="https://i.postimg.cc/tgtQF09v/1678713387793.jpg" alt="Screenshot-2023-03-13-21-11-08-311-com-android-se.jpg"></td>
</tr>
</tbody>
</table>
<hr>
<h3 id="懒人修改法"><a class="headerlink" href="#懒人修改法"></a>懒人修改法</h3>
<p>软件 <em>爱玩机工具箱</em> 有一键添加所有软件到白名单，并且制作Magisk模块刷入，懒人福音<br>
<a href="https://www.coolapk.com/apk/com.byyoung.setting">下载链接</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>搞机</tag>
        <tag>MIUI</tag>
        <tag>破解</tag>
      </tags>
  </entry>
  <entry>
    <title>Github Actions文件下载教程</title>
    <url>/posts/8873/</url>
    <content><![CDATA[<h3 id="前言"><a class="headerlink" href="#前言"></a>前言</h3>
<ul>
<li>有的软件，稳定版有bug，或者其他什么原因，需要使用测试版，需要去Github Actions下载测试版</li>
</ul>
<h4 id="教程"><a class="headerlink" href="#教程"></a>教程</h4>
<ul>
<li>首先需要一个Github账号，没有的需要<a href="https://github.com/join">注册</a>一个（因为下载必须登录）</li>
<li>登录后前往所需要下载的项目</li>
<li>点击Header上的Actions，如图：<img class="inline-img" src="/image/action.png" style="height:50px" /></li>
<li>找到要下载的一次workflows，点击进入</li>
<li>向下翻会找到一栏名叫Artifacts的东西，下面就是action运行后所编译的东西</li>
<li>点击要下载的项目名字，就会开始下载</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>下载</tag>
        <tag>测试版</tag>
      </tags>
  </entry>
  <entry>
    <title>模块发行版本区别</title>
    <url>/posts/31389/</url>
    <content><![CDATA[<div class="note success no-icon flat"><p><a href="https://github.com/Block-Network/StatusBarLyric/releases">《墨-状态栏歌词》稳定版下载地址</a><br>
<a href="https://github.com/Block-Network/StatusBarLyric/actions/workflows/Android_Dev.yml">《墨-状态栏歌词》Dev下载地址</a></p>
</div>
<div class="note primary no-icon flat"><p><a href="https://github.com/xiaowine/Lyric-Getter/releases">《Lyric Getter》稳定版下载地址</a><br>
<a href="https://github.com/xiaowine/Lyric-Getter/actions/workflows/android.yml">《Lyric Getter》Dev下载地址</a></p>
</div>
<h4 id="说明"><a class="headerlink" href="#说明"></a>说明</h4>
<ul>
<li>《墨-状态栏歌词》与《Lyric Getter》稳定版目前都会有两个文件，一个是<code>Release</code>，一个是<code>Debug</code></li>
<li>这两个发行版本区别在于
<ul>
<li><code>Release</code>混淆代码，不输出Log，适合日常用</li>
<li><code>Debug</code>不混淆代码，不检测版本更新，不提示公告，输出Log，适合测试的时候使用</li>
<li>混淆会大幅度减小apk体积，但是会导致代码不易读，难以找到报错的位置</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>墨-状态栏歌词</tag>
        <tag>Android</tag>
        <tag>Lyric Getter</tag>
      </tags>
  </entry>
</search>
